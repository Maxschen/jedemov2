{
  "title": "Typeahead Autocomplete",
  "schema": {
    "title": "Typeahead/Bloodhound example",
    "type": "object",
    "properties": {
      "roadname": {
        "type": "string",
        "title": "Roadname"
      },
      "products": {
        "type": "array",
        "title": "More roads",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "title": "Roadname",
              "type": "string"
            },
            "number": {
              "title": "Number",
              "type": "number"
            }
          }
        }
      }
    }
  },
  "startval": {},
  "config": {
    "theme": "bootstrap3",
    "iconlib": "bootstrap3",
    "object_layout": "normal",
    "template": "default",
    "show_errors": "interaction"
  },
  "code": "// includeJS(\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\")\n// includeJS(\"https://cdnjs.cloudflare.com/ajax/libs/corejs-typeahead/1.2.1/typeahead.bundle.min.js\")\n// Initialize the Typeahead/Bloodhound engine\n// (See Typeahead/Bloodhound documentation for more info)\nvar roadEngine = new Bloodhound({\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\"tekst\"),\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  remote: {\n    url: \"https://dawa.aws.dk/vejnavne/autocomplete?q=%QUERY\",\n    wildcard: \"%QUERY\",\n    cache: true\n  }\n});\nroadEngine.clearRemoteCache();\nroadEngine.initialize();\n\n// Typeahead/Bloodhound dataset\nvar roadEngineDataset = {\n  name: \"road\",\n  display: \"tekst\",\n  source: roadEngine.ttAdapter()\n};\n// Typeahead/Bloodhound config options\nvar roadEngineConfig = {\n  autoselect: true,\n  highlight: true,\n  hint: true,\n  minLength: 3\n};\n\nvar attachTypeaheadHandler = function(ed) {\n  if (ed) {\n    // Remove any existing Typeahead/Bloodhound handlers\n    $(ed.input).typeahead('destroy');\n    // Attach the Typeahead/Bloodhound engine to the JSON-Editor input field\n    $(ed.input).typeahead(roadEngineConfig, roadEngineDataset)\n    .on(\"typeahead:asyncrequest\", function() {\n      // Enable spinner\n      $(ed.input).parent().addClass(\"input-loading\");\n    })\n    .on(\"typeahead:asynccancel typeahead:asyncreceive\", function() {\n      // Disable spinner\n      $(ed.input).parent().removeClass(\"input-loading\");\n    });\n\n    // Change parent (wrapper) display from inline-block to block\n    $(ed.input).parent().css(\"display\", \"block\");\n  }\n};\n\n// When JSON-Editor is ready perform action on field(s)\njseditor.on('ready', function() {\n  // Get the JSON-Editor for the  static \"roadname\" field\n  var ed = this.getEditor('root.roadname');\n  // Attach Typeahead handler to static field\n  attachTypeaheadHandler(ed);\n\n});\n\n\njseditor.on('change', function() {\n\n  // Loop through all editors/fields\n  for (var key in this.editors) {\n    if (this.editors.hasOwnProperty(key)) {\n      var ed = this.getEditor(key);\n      // We need the parent to be an objerct and the parents parent to be an array\n      if (ed.parent && ed.parent.parent && ed.parent.schema.type == 'object' && ed.parent.parent.schema.type == 'array') {\n        // If the editor key is \"name\" then we attach the typeahead handler\n        // You could also add an additional check for the name of the\n        // \"parent.parent.key\" if you have more array objects\n        if (ed.key == 'name') {\n          // Attach Typeahead handler to dynamic field\n          attachTypeaheadHandler(ed);\n        }\n      }\n    }\n  }\n\n});",
  "style": ".tt-query {\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n.tt-hint {\n  color: #999;\n}\n.tt-menu {\n  width: 100%;\n  min-width: 200px;\n  padding: 4px 0;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n}\n.tt-suggestion {\n  padding: 3px 20px;\n  line-height: 24px;\n}\n.tt-suggestion.tt-cursor,\n.tt-suggestion:hover {\n  color: #fff;\n  background-color: #0097cf;\n}\n.tt-suggestion p {\n  margin: 0;\n}\n.input-loading {}\n.input-loading:after {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  content: \"\\e030\";\n  font-family: \"Glyphicons Halflings\";\n  color: #0097cf;\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 1;\n  transform: rotate(0deg);\n  animation: spinner 1s linear infinite;\n}\n@keyframes spinner {\n  100% {\n    transform: rotate(359deg);\n  }\n}",
  "desc": "<p>This example shows how to add autocomplete/autosuggest using Twitter Typeahead + Bloodhound plugins.</p><p>The example uses the Danish Roadname API (because it doesn't require any authentication ðŸ˜„), but you can use whatever API you like (See the <a href='https://github.com/corejavascript/typeahead.js'>documentation</a> for Typeahead/Bloodhound)</p>"
}